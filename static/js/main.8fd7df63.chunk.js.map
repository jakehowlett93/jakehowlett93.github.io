{"version":3,"sources":["assets/movie-search-thumbnail.png","assets/pokedex-thumbnail.png","assets/smashdown-thumbnail.png","assets/jake-howlett-CV.pdf","assets/current-project-thumbnail.png","assets/movie-search.png","assets/pokedex.png","assets/smashdown.png","components/cards/currentProjectCard/index.js","components/cards/movieSearchCard/index.js","components/cards/pokedexCard/index.js","components/cards/smashDownCard/index.js","components/cards/index.js","components/header/index.js","components/contact/index.js","components/projects/currentProject/index.js","components/projects/movieSearch/index.js","components/projects/pokedex/index.js","components/projects/smashDown/index.js","components/App.js","index.js"],"names":["module","exports","CurrentProjectCard","to","className","src","require","alt","MovieSearchCard","PokedexCard","SmashdownCard","Cards","Header","href","Pdf","Contact","MovieSearch","smallImage","largeImage","srcSet","sizes","Pokedex","id","SmashDown","App","basename","path","exact","component","CurrentProject","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8fd7df63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/movie-search-thumbnail.14bac3dd.png\";","module.exports = __webpack_public_path__ + \"static/media/pokedex-thumbnail.c5fdaf4f.png\";","module.exports = __webpack_public_path__ + \"static/media/smashdown-thumbnail.15cefdf1.png\";","module.exports = __webpack_public_path__ + \"static/media/jake-howlett-CV.2cc588cb.pdf\";","module.exports = __webpack_public_path__ + \"static/media/current-project-thumbnail.87a88afd.png\";","module.exports = __webpack_public_path__ + \"static/media/movie-search.a1db98e9.png\";","module.exports = __webpack_public_path__ + \"static/media/pokedex.23899af8.png\";","module.exports = __webpack_public_path__ + \"static/media/smashdown.f90e5df6.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CurrentProjectCard = () => { //gotta change card-title to project-title in the h3\r\n    return (\r\n        <Link to='/current-project' className=\"card-link\">\r\n            <div className=\"card\">\r\n                <div className=\"card-info\">\r\n                    <div className=\"card-circle\">\r\n                        <h3 className=\"card-title extra-padding\">Current <br/> Project</h3>\r\n                        <p className=\"card-subtitle\">React CSS</p>\r\n                    </div>\r\n                </div>\r\n                <img className=\"card-image\" src={ require(\"../../../assets/current-project-thumbnail.png\") } alt=\"current Project\" />\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default CurrentProjectCard;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MovieSearchCard = () => {\r\n    return (\r\n        <Link to='/movie-search' className=\"card-link\">\r\n            <div className=\"card\">\r\n                <div className=\"card-info\">\r\n                    <div className=\"card-circle\">\r\n                        <h3 className=\"card-title\">OMDb <br/> searcher</h3>\r\n                        <p className=\"card-subtitle\">React Redux(thunk)</p>\r\n                    </div>\r\n                </div>\r\n                <img className=\"card-image\" src={ require(\"../../../assets/movie-search-thumbnail.png\") } alt=\"Movie search project\" />\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default MovieSearchCard;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PokedexCard = () => {\r\n    return (\r\n        <Link to='/pokedex' className=\"card-link\">\r\n            <div className=\"card\">\r\n                <div className=\"card-info\">\r\n                    <div className=\"card-circle\">\r\n                        <h3 className=\"card-title extra-padding\" >PokeAPI <br/> Pokedex</h3>\r\n                        <p className=\"card-subtitle\">JS HTML CSS</p>\r\n                    </div>\r\n                </div>\r\n                <img className=\"card-image\" src={ require(\"../../../assets/pokedex-thumbnail.png\") } alt=\"Pokedex project\" />\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default PokedexCard;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SmashdownCard = () => {\r\n    return (\r\n        <Link to='/smash-down' className=\"card-link\">\r\n            <div className=\"card\">\r\n                <div className=\"card-info\">\r\n                    <div className=\"card-circle\">\r\n                        <h3 className=\"card-title extra-padding\">Smashdown <br/> tracker</h3>\r\n                        <p className=\"card-subtitle\">JS jQuery CSS HTML</p>\r\n                    </div>\r\n                </div>\r\n                <img className=\"card-image\" src={ require(\"../../../assets/smashdown-thumbnail.png\") } alt=\"Smashdown project\" />\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default SmashdownCard;","import React from 'react';\r\n\r\nimport CurrentProjectCard from './currentProjectCard';\r\nimport MovieSearchCard from './movieSearchCard';\r\nimport PokedexCard from './pokedexCard';\r\nimport SmashdownCard from './smashDownCard';\r\nimport './index.css'\r\n\r\nconst Cards = () => {\r\n    return (\r\n        <main className=\"card-container\">\r\n            <CurrentProjectCard />\r\n            <MovieSearchCard />\r\n            <PokedexCard />\r\n            <SmashdownCard />\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Cards;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './index.css';\r\nimport Pdf from '../../assets/jake-howlett-CV.pdf'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header-container\">\r\n            <div className=\"logo\">\r\n                <div className=\"logo-text\">\r\n                    Jake <br/> Howlett\r\n                </div>\r\n            </div>\r\n            <nav className=\"nav-span-container\">\r\n                <div className=\"nav-span\">\r\n                    <Link to=\"/\" className=\"header-link\">\r\n                        Home\r\n                    </Link>\r\n                </div>\r\n                <div className=\"nav-span\">\r\n                    <a className=\"header-link\" href={Pdf}>CV</a>\r\n                </div>\r\n                <div className=\"nav-span\">\r\n                    <Link to=\"/contact\" className=\"header-link\">\r\n                        Contact\r\n                    </Link>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <main>\r\n            <p>\r\n                Email: jake.howlett93@gmail.com\r\n            </p>\r\n            <p>\r\n                GitHub: <a href=\"https://github.com/jakehowlett93\"> jakehowlett93</a>\r\n            </p>\r\n            <p>\r\n                LinkedIn: <a href=\"https://www.linkedin.com/in/jake-howlett-b48a66a6/\">Jake Howlett</a>\r\n            </p>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Contact;","import React from 'react';\r\nimport '../index.css';\r\n\r\n\r\n\r\nconst MovieSearch = () => {\r\n    return (\r\n        <main className=\"project-container\">\r\n                <h1 className=\"project-title\">Draw Stuff</h1>\r\n                <p className=\"project-description\">\r\n                    I have been working as part of a two person team to develop a web app, it will be an online game similar to Telestrations. \r\n                </p>\r\n                <p className=\"project-description\">\r\n                    I have spent most of my time so far creating modular react components, writing functions that are used to control state and \r\n                    writing tests for all my code using Jest. I have also been using Flow for static type checking, GIT for version control, and NodeJS with Socket.io \r\n                    for the backend. I have done very little work on the back end so far but I did implement server side validation to ensure only the admin could\r\n                    start the game.\r\n                </p>\r\n                <p className=\"project-description\">\r\n                    Throughout this project I have been responsible for deciding when i need to use external libraries, researching relevant libraries and then installing \r\n                    them using NPM. To manage the project we have been taking an agile approach and using a card system on the website trello to keep track of what needs \r\n                    to be done and whos working on what.\r\n                </p>\r\n                <p className=\"project-description\">\r\n                    The repository for this project is not owned by me and is set to private however I have taken out some of the components and actions ive worked\r\n                    on and put them in a \r\n                    <a className=\"project-link\" href=\"https://github.com/jakehowlett93/movie-search\"> repository here.</a>\r\n                </p>\r\n                \r\n\r\n        </main>\r\n            \r\n    )\r\n}\r\n\r\nexport default MovieSearch;","import React from 'react';\r\nimport '../index.css';\r\n\r\nconst smallImage = require(\"../../../assets/movie-search-thumbnail.png\")\r\nconst largeImage = require(\"../../../assets/movie-search.png\")\r\n\r\nconst MovieSearch = () => {\r\n    return (\r\n        <main className=\"project-container\">\r\n                <h1 className=\"project-title\">OMDb Searcher</h1>\r\n                <p className=\"project-description\">\r\n                    This was a personal project made to practice using React, Redux and Redux-thunk. It is a webpage that allows the user to search the\r\n                    Open Movie Database for movies, it then show the user up to 10 movies that match their search. The user can click on any of the movies\r\n                    in this list to get more details.\r\n                </p>\r\n                <p className=\"project-description\">\r\n                    I built the page using React, its a fairly simple page consisting of just 4 components. The main focus of this project was using Redux along\r\n                    with the Redux-thunk middleware. I enjoyed working with Redux and found using action creators and reducers to handle state felt quite intuitive.\r\n                    I used Redux-thunk to give action creators the ability to return a function which made using async code within the actions much easier. To achieve \r\n                    the look i used CSS with the flex display, which also means the page is responsive and adjusts to different screen sizes.\r\n                </p>\r\n                <p className=\"project-description\">\r\n                    I havent fully completed the project yet as i still have some unit tests to write which I have been slowly doing between other projects.\r\n                </p>\r\n                <a className=\"project-link\" href=\"https://jh-movie-search.netlify.app/\">Visit the site</a>\r\n                <a className=\"project-link\" href=\"https://github.com/jakehowlett93/movie-search\">Visit the repository.</a>\r\n                <img \r\n                    className=\"project-image\" \r\n                    src={smallImage} \r\n                    srcSet={`${smallImage} 424w, ${largeImage} 1149w`}\r\n                    sizes=\"(max-width: 600px) 80vw\"\r\n                    alt=\"\"\r\n                />\r\n        </main>\r\n            \r\n    )\r\n}\r\n\r\nexport default MovieSearch;","import React from 'react';\r\nimport '../index.css';\r\n\r\nconst smallImage = require(\"../../../assets/pokedex-thumbnail.png\")\r\nconst largeImage = require(\"../../../assets/pokedex.png\")\r\n\r\nconst Pokedex = () => {\r\n    return (\r\n        <main className=\"project-container\">\r\n                <h1 className=\"project-title\">Pokedex</h1>\r\n                <p className=\"project-description\">\r\n                    This is a personal project that I completed to get some practice with making API requests using the async await syntax. It allows users to \r\n                    search through a database of pokemon using an API and then displays information about the searched pokemon to the user. I chose to use\r\n                    the pokeAPI to practice as it is free to use and well documented.\r\n                </p>\r\n                <p className=\"project-description\">\r\n                    I built the page using plain HTML, CSS and JavaScript. Most of the work is done inside the handle submit function which calls a number of other\r\n                    functions to make api requests and then display the information to the user.\r\n                </p>    \r\n                <p className=\"project-description\">\r\n                    I enjoyed the challenge of learning about asynchronous code and the concept of promises, aswell as testing async code with the jest library.\r\n                </p>\r\n                <a className=\"project-link\" href=\"https://jake-pokedex.netlify.app/\">Visit the site</a>\r\n                <a className=\"project-link\" href=\"https://github.com/jakehowlett93/pokedex-pokeapi\">Visit the repository.</a>\r\n                <img \r\n                    className=\"project-image\" id=\"pokedex-image\" \r\n                    src={smallImage} \r\n                    srcSet={`${smallImage} 323w, ${largeImage} 398w`}\r\n                    sizes=\"(max-width: 800px) 80vw\"\r\n                    alt=\"\"\r\n                />\r\n        </main>\r\n            \r\n    )\r\n}\r\n\r\nexport default Pokedex;","import React from 'react';\r\nimport '../index.css';\r\n\r\nconst smallImage = require(\"../../../assets/smashdown-thumbnail.png\")\r\nconst largeImage = require(\"../../../assets/smashdown.png\")\r\n\r\nconst SmashDown = () => {\r\n    return (\r\n        <main className=\"project-container\">\r\n                <h1 className=\"project-title\">Smash Down</h1>\r\n                <p className=\"project-description\">\r\n                    The client wanted a webpage that allowed them to track characters and scores for a game that they play. The game is called Super\r\n                    Smash Brothers Ultimate and it has a game mode called smashdown that is available for local co-op but not online co-op. The client wanted\r\n                    a website that let them track what characters had already been selected and by who and what the overall score is. I decided to use a layout\r\n                    similar to the one found in the game.\r\n                </p>\r\n                <p className=\"project-description\">\r\n                    I built the page using plain HTML and CSS plus JavaScript with jQuery. The  character portraits are generated by a\r\n                    for loop that creates each image element and appends them to a div. I used the flex display in CSS to get the layout, which is\r\n                    responsive adjusting the images for different screens sizes.\r\n                </p>\r\n                <p className=\"project-description\">\r\n                    For this webpage I decided to try out jQuery, I liked the ease of selecting DOM elements and the improved readability of code. \r\n                    The feature that I found most useful was the built in iterator which made for cleaner code. \r\n                </p>\r\n                <p className=\"project-description\">\r\n                    I wrote a suit of tests for the code using the Jest library, mainly running functions on mock \r\n                    elements to check the correct actions are carried out. This project also used NPM, Webpack, Babel, Prettier and ESLint.\r\n                </p>\r\n                <a className=\"project-link\" href=\"https://smash-down.neocities.org/\">Visit the site</a>\r\n                <a className=\"project-link\" href=\"https://github.com/jakehowlett93/smash-down\">Visit the repository.</a>\r\n                <img \r\n                    className=\"project-image\" \r\n                    src={smallImage} \r\n                    srcSet={`${smallImage} 424w, ${largeImage} 1149w`}\r\n                    sizes=\"(max-width: 600px) 80vw\"\r\n                    alt=\"\"\r\n                />\r\n        </main>\r\n            \r\n    )\r\n}\r\n\r\nexport default SmashDown;","import React from 'react';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\n\r\nimport Cards from '../components/cards';\r\nimport Header from '../components/header';\r\nimport Contact from '../components/contact';\r\nimport CurrentProject from './projects/currentProject';\r\nimport MovieSearch from './projects/movieSearch';\r\nimport Pokedex from './projects/pokedex';\r\nimport SmashDown from './projects/smashDown';\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <HashRouter basename=\"/\">\r\n                <nav className=\"header\">\r\n                    <Header />\r\n                </nav>\r\n                <main className=\"content\">\r\n                    <Route path=\"/\" exact component={Cards} />\r\n                    <Route path=\"/contact\" exact component={Contact} />\r\n                    <Route path=\"/current-project\" exact component={CurrentProject} />\r\n                    <Route path=\"/movie-search\" exact component={MovieSearch} />\r\n                    <Route path=\"/pokedex\" exact component={Pokedex} />\r\n                    <Route path=\"/smash-down\" exact component={SmashDown} />\r\n                </main>  \r\n            </HashRouter>\r\n          \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\nimport './index.css'\r\n\r\nReactDOM.render (\r\n    <App />,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}